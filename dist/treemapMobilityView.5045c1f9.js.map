{"version":3,"sources":["scripts/treemapMobilityView.js"],"names":["checkboxes","document","getElementsByClassName","checkbox","addEventListener","checked","displaymobilitydata","name","console","log","param","mobilityData","temp","d3","csv","then","data","forEach","element","push","country","m","div","month","d","day","s","undefined","parseFloat","toFixed","createTreeChart","select","remove","margin","top","right","bottom","left","width","height","svg","append","attr","groupedData","reduce","k","v","hgroup","hierarchy","Germany","sum","treemap","size","padding","color","scale","linear","domain","range","opacity","scaleLinear","selectAll","leaves","enter","id","x0","y0","x1","y1","style","text","transportation_type","exports"],"mappings":"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","file":"treemapMobilityView.5045c1f9.js","sourceRoot":"..\\src","sourcesContent":["// the entry point for the BundeslÃ¤nder select ('chekbox' in index.html)\r\nconst checkboxes = document.getElementsByClassName('checkbox')\r\nfor (let checkbox of checkboxes){\r\n  checkbox.addEventListener('change', function() {\r\n      if(this.checked){\r\n        displaymobilitydata(checkbox.name)\r\n        console.log(\"Checked and the function is called\");\r\n      } else {\r\n        //  console.log(\"unchecked\");\r\n      }\r\n  }) \r\n}\r\n\r\nfunction displaymobilitydata(param){\r\n    // temporal: without checkbox selection, \"Bavaria\" is the default\r\n    if(param ==null) var param = \"Bavaria\";\r\n    let mobilityData = [];\r\n    var temp = [];\r\n    d3.csv('../src/data/applemobilitytrends.csv').then(function(data){\r\n        data.forEach(element => temp.push(element));\r\n        temp.forEach(function(element) {\r\n            if (element.country == \"Germany\" && \r\n            element[\"sub-region\"] == \"\" && \r\n            element[\"region\"]==param) {\r\n                mobilityData.push(element);\r\n            }\r\n        });\r\n        console.log(data);\r\n        console.log(temp);\r\n        //calculate average value for every month\r\n        for (let m=1; m<13; m++){\r\n\r\n            //since each month has a different number of days and the data has some gaps for two days we need to store the individual number of days each month in the variable div\r\n            let div = 0;\r\n\r\n            // if clause to make the month valuefitting to the formatting in the dataset\r\n            if (m<10) month=\"0\"+m;\r\n            else month=m;\r\n\r\n            for (let d=1; d<32; d++){\r\n\r\n                // if clause to make the day value fitting to the formatting in the dataset\r\n                if (d<10) day=\"0\"+d;\r\n                else day=d;\r\n\r\n                //format of the date stored in a variable\r\n                let s = \"2020-\"+month+\"-\"+day;\r\n\r\n                mobilityData.forEach(function(element){\r\n                    if (element[s] !== undefined && element[s] !== \"\") {\r\n                        div++;\r\n                        if (element[month]== null) \r\n                        element[month]= element[s];\r\n\r\n                        else {element[month]= parseFloat(element[month]) + parseFloat(element[s]);}\r\n                    }\r\n                });\r\n            }\r\n\r\n            //div needs to be divided by 16 since it gets count up in the forEach loop for all 16 German regions\r\n            div = div/16;\r\n\r\n            mobilityData.forEach(function(element){\r\n                element[month]=(parseFloat(element[month])/div).toFixed(2);\r\n            });\r\n        }\r\n\r\n        //generate TreeChart from the provided Dateset\r\n        createTreeChart(mobilityData)\r\n    });\r\n};\r\n\r\n//displaymobilitydata();\r\n\r\nfunction createTreeChart(data){\r\n\r\n    //in case new treemap shall be loaded, the one before gets removed\r\n    d3.select(\"#treemapMobilitywrapper\").select(\"svg\").remove();\r\n\r\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\r\n        width = 450 - margin.left - margin.right,\r\n        height = 450 - margin.top - margin.bottom;\r\n\r\n    var svg = d3.select(\"#treemapMobilitywrapper\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    //Group the data by \"Germany\", so our tree has a root node\r\n    let groupedData = data.reduce((k, v)=> {\r\n        k[v.country] = [...k[v.country] || [], v];\r\n        return k;\r\n        }, {});\r\n\r\n\r\n    //Transform the data grouped by \"Germany\" into a hiearchy by usind d3.js hierachy (first param is root, second param is child nodes\r\n    var hgroup = d3.hierarchy(groupedData, function(d){\r\n                                return d.Germany}\r\n                                )\r\n        .sum((d) => {return d[\"12\"]});\r\n\r\n    // Then d3.treemap computes the position of each element of the hierarchy\r\n    // The coordinates are added to the root object above\r\n   const treemap= d3.treemap()\r\n       .size([width, height])\r\n       .padding(4)\r\n      (hgroup)\r\n\r\n\r\n    // Determine the color of each field\r\n    // Explanation from https://stackoverflow.com/questions/42546344/how-to-apply-specific-colors-to-d3-js-map-based-on-data-values?rq=1\r\n    var color= d3.scale.linear()\r\n                .domain([400, 1000])\r\n                .range([\"Salmon\", \"IndianRed\"]);\r\n\r\n    // Add a opacity scale\r\n    var opacity =d3.scaleLinear()\r\n                .domain([400, 1000])\r\n                .range([.4,1])\r\n\r\n    // use this information to add rectangles:\r\n    svg\r\n        .selectAll(\"rect\")\r\n        .data(treemap.leaves())\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"id\", (d) =>{return d.id;})\r\n        .attr('x', function (d) { return d.x0; })\r\n        .attr('y', function (d) { return d.y0})\r\n        .attr('width', function (d) { return d.x1 - d.x0; })\r\n        .attr('height', function (d) { return d.y1 - d.y0})\r\n        .style(\"fill\", function(d) {\r\n            return color(d.data[\"05\"]);})\r\n            .style(\"opacity\", function(d) {\r\n                return opacity(d.data[\"05\"])\r\n            });\r\n\r\n    // and to add the text labels\r\n    svg\r\n        .selectAll(\"text\")\r\n        .data(treemap.leaves())\r\n        .enter()\r\n        .append(\"text\")\r\n        .attr(\"x\", function(d){ return d.x0+20})    // +10 to adjust position (more right)\r\n        .attr(\"y\", function(d){ return d.y0+30})    // +20 to adjust position (lower)\r\n        .text(function(d){ \r\n            // Temporal: kurze Syntax und bessere Images\r\n            if(d.data.transportation_type === \"driving\"){\r\n            return \"ð \" + d.data.transportation_type +\" \"+ d.data[\"05\"]+\"%\"; }\r\n         else if(d.data.transportation_type === \"walking\"){\r\n            return \"ð¶ââï¸ \" + d.data.transportation_type +\" \"+ d.data[\"05\"]+\"%\";\r\n        } else if(d.data.transportation_type === \"transit\") {\r\n            return \"ð \"+ d.data.transportation_type +\" \"+ d.data[\"05\"]+\"%\";\r\n        }})\r\n        .attr(\"font-size\", \"18px\")\r\n        .attr(\"fill\", \"white\")\r\n}\r\n\r\nexports.displaymobilitydata = displaymobilitydata;\r\n"]}